<?xml version="1.0" encoding="utf-8"?>
<geogebra format="5.0" version="5.0.687.0" app="classic" platform="w" id="E1D6F882-CB5F-4BF4-B867-20BED6D25E20"  xsi:noNamespaceSchemaLocation="http://www.geogebra.org/apps/xsd/ggb.xsd" xmlns="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
<gui>
	<window width="736" height="523" />
	<perspectives>
<perspective id="tmp">
	<panes>
		<pane location="" divider="0.9891304347826086" orientation="1" />
	</panes>
	<views>
		<view id="512" toolbar="0 | 1 501 5 19 , 67 | 2 15 45 18 , 7 37 | 514 3 9 , 13 44 , 47 | 16 51 | 551 550 11 ,  20 22 21 23 , 55 56 57 , 12 | 69 | 510 511 , 512 513 | 533 531 , 534 532 , 522 523 , 537 536 , 535 , 538 | 521 520 | 36 , 38 49 560 | 571 30 29 570 31 33 | 17 | 540 40 41 42 , 27 28 35 , 6 , 502" visible="false" inframe="false" stylebar="false" location="1,1,1" size="500" window="100,100,600,400" />
		<view id="4" toolbar="0 || 2020 , 2021 , 2022 || 2001 , 2003 , 2002 , 2004 , 2005 || 2040 , 2041 , 2042 , 2044 , 2043" visible="false" inframe="false" stylebar="false" location="1,1" size="300" window="100,100,600,400" />
		<view id="8" toolbar="1001 | 1002 | 1003  || 1005 | 1004 || 1006 | 1007 | 1010 || 1008 | 1009 || 6" visible="false" inframe="false" stylebar="false" location="1,3" size="300" window="100,100,600,400" />
		<view id="1" visible="true" inframe="false" stylebar="false" location="1" size="736" window="100,100,600,400" />
		<view id="2" visible="false" inframe="false" stylebar="true" location="3" size="379" tab="ALGEBRA" window="100,100,250,400" />
		<view id="16" visible="false" inframe="false" stylebar="false" location="1" size="300" window="50,50,500,500" />
		<view id="32" visible="false" inframe="false" stylebar="true" location="1" size="300" window="50,50,500,500" />
		<view id="64" toolbar="0" visible="false" inframe="false" stylebar="false" location="1" size="480" window="50,50,500,500" />
		<view id="128" visible="false" inframe="false" stylebar="false" location="1" size="480" window="50,50,500,500" />
		<view id="4097" visible="false" inframe="false" stylebar="true" location="1" size="331" window="100,100,700,550" />
		<view id="70" toolbar="0 || 2020 || 2021 || 2022" visible="false" inframe="false" stylebar="true" location="1" size="900" window="50,50,500,500" />
	</views>
	<toolbar show="true" items="0 73 62 | 1 501 67 , 5 19 , 72 75 76 | 2 15 45 , 18 65 , 7 37 | 4 3 8 9 , 13 44 , 58 , 47 | 16 51 64 , 70 | 10 34 53 11 , 24  20 22 , 21 23 | 55 56 57 , 12 | 36 46 , 38 49  50 , 71  14  68 | 30 29 54 32 31 33 | 25 17 26 60 52 61 | 40 41 42 , 27 28 35 , 6" position="1" help="false" />
	<input show="true" cmd="true" top="false" />
	<dockBar show="false" east="false" />
</perspective>
	</perspectives>
	<labelingStyle  val="3"/>
	<font  size="16"/>
</gui>
<euclidianView>
	<viewNumber viewNo="1"/>
	<size  width="735" height="426"/>
	<coordSystem xZero="236.3778251033059" yZero="453.3513908057853" scale="68.21374999999999" yscale="68.21374999999998"/>
	<evSettings axes="true" grid="false" gridIsBold="false" pointCapturing="3" rightAngleStyle="1" checkboxSize="26" gridType="3"/>
	<bgColor r="255" g="255" b="255"/>
	<axesColor r="255" g="127" b="0"/>
	<gridColor r="192" g="192" b="192"/>
	<lineStyle axes="1" grid="0"/>
	<axis id="0" show="true" label="h" unitLabel="" tickStyle="0" showNumbers="true" selectionAllowed="false"/>
	<axis id="1" show="false" label="" unitLabel="" tickStyle="1" showNumbers="true"/>
</euclidianView>
<kernel>
	<continuous val="false"/>
	<usePathAndRegionParameters val="true"/>
	<decimals val="2"/>
	<angleUnit val="degree"/>
	<algebraStyle val="3" spreadsheet="0"/>
	<coordStyle val="0"/>
</kernel>
<tableview min="-2" max="2" step="1"/>
<scripting blocked="false" disabled="false"/>
<construction title="CrossRatio" author="" date="">
<element type="point" label="V">
	<show object="true" label="true" ev="4"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<coords x="0" y="4" z="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
</element>
<command name="Point">
	<input a0="xAxis"/>
	<output a0="P"/>
</command>
<element type="point" label="P">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<ggbscript val="SetValue(ManMoves, Append(&quot;P&quot;,ManMoves\{&quot;P&quot;}))"/>
	<ggbscript onUpdate="If(χHarmonic==false &amp;&amp; abs(x(P)-ph)&lt;εsnap,SetCoords(P,ph,0))"/>
	<coords x="2" y="0" z="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
</element>
<command name="If">
	<input a0="x(P) ≟ x(P)" a1="x(P)" a2="Infinity"/>
	<output a0="p"/>
</command>
<element type="numeric" label="p">
	<value val="2"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<ggbscript onUpdate="UpdateConstruction()&#xa;If(χHarmonic,SetCoords(N, nh,0))"/>
</element>
<command name="Point">
	<input a0="xAxis"/>
	<output a0="N"/>
</command>
<element type="point" label="N">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<ggbscript val="SetValue(ManMoves, Append(&quot;N&quot;,ManMoves\{&quot;N&quot;}))"/>
	<ggbscript onUpdate="If(χHarmonic==false &amp;&amp; abs(x(N)-nh)&lt;εsnap,SetCoords(N,nh,0))&#xa;"/>
	<coords x="-2" y="0" z="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
</element>
<command name="If">
	<input a0="x(N) ≟ x(N)" a1="x(N)" a2="Infinity"/>
	<output a0="n"/>
</command>
<element type="numeric" label="n">
	<value val="-2"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<ggbscript onUpdate="UpdateConstruction()&#xa;If(χHarmonic,SetCoords(P, ph, 0))"/>
</element>
<command name="Point">
	<input a0="xAxis"/>
	<output a0="I"/>
</command>
<element type="point" label="I">
	<show object="true" label="true" ev="4"/>
	<objColor r="255" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<ggbscript val="SetValue(ManMoves, Append(&quot;I&quot;,ManMoves\{&quot;I&quot;}))"/>
	<ggbscript onUpdate="If(χHarmonic==false &amp;&amp; abs(x(I)-dh) &lt; εsnap, SetCoords(I,dh,0))&#xa;"/>
	<coords x="1" y="0" z="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
</element>
<command name="If">
	<input a0="x(I) ≟ x(I)" a1="x(I)" a2="Infinity"/>
	<output a0="d"/>
</command>
<element type="numeric" label="d">
	<value val="1"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<ggbscript onUpdate="UpdateConstruction()&#xa;If(χHarmonic,SetCoords(E,eh,0))"/>
</element>
<command name="Point">
	<input a0="xAxis"/>
	<output a0="E"/>
</command>
<element type="point" label="E">
	<show object="true" label="true" ev="4"/>
	<objColor r="255" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<ggbscript val="SetValue(ManMoves, Append(&quot;E&quot;,ManMoves\{&quot;E&quot;}))"/>
	<ggbscript onUpdate="If(χHarmonic==false &amp;&amp; abs(x(E)-eh)&lt;εsnap,SetCoords(E,eh,0))"/>
	<coords x="4" y="0" z="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
</element>
<command name="If">
	<input a0="x(E) ≟ x(E)" a1="x(E)" a2="Infinity"/>
	<output a0="e"/>
</command>
<element type="numeric" label="e">
	<value val="4"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<ggbscript onUpdate="UpdateConstruction()&#xa;If(χHarmonic,SetCoords(I,dh,0))&#xa;"/>
</element>
<command name="If">
	<input a0="abs(n) ≠ Infinity" a1="Line[V, N]" a2="Line[V, xAxis]"/>
	<output a0="lVN"/>
</command>
<element type="line" label="lVN">
	<show object="true" label="false" ev="4"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<coords x="4" y="-2" z="8"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
	<eqnStyle style="implicit"/>
</element>
<command name="Point">
	<input a0="lVN"/>
	<output a0="N&apos;"/>
</command>
<element type="point" label="N&apos;">
	<show object="true" label="true" ev="4"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<coords x="-1" y="2" z="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
</element>
<command name="If">
	<input a0="abs(p) ≠ Infinity" a1="Line[V, P]" a2="Line[V, xAxis]"/>
	<output a0="lVP"/>
</command>
<element type="line" label="lVP">
	<show object="true" label="false" ev="4"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-1" y="18"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<coords x="4" y="2" z="-8"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
	<eqnStyle style="implicit"/>
</element>
<command name="Point">
	<input a0="lVP"/>
	<output a0="P&apos;"/>
</command>
<element type="point" label="P&apos;">
	<show object="true" label="true" ev="4"/>
	<objColor r="0" g="0" b="255" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="1" playing="false"/>
	<coords x="1.3333333333333335" y="1.3333333333333333" z="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
</element>
<command name="Line">
	<input a0="N&apos;" a1="P&apos;"/>
	<output a0="l"/>
</command>
<element type="line" label="l">
	<show object="true" label="true" ev="4"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="1" y="-12"/>
	<labelMode val="3"/>
	<selectionAllowed val="false"/>
	<ggbscript onUpdate="SetValue(Parallels,1)"/>
	<coords x="0.6666666666666667" y="2.3333333333333335" z="-4"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<eqnStyle style="implicit"/>
	<caption val="$ℓ$"/>
</element>
<command name="If">
	<input a0="abs(d) ≠ Infinity" a1="Line[V, I]" a2="Line[V, xAxis]"/>
	<output a0="lVI"/>
</command>
<element type="line" label="lVI">
	<show object="true" label="false" ev="4"/>
	<objColor r="255" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="-6" y="18"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<ggbscript onUpdate="SetValue(Parallels,1)&#xa;SetValue(Perpendiculars,1)"/>
	<coords x="4" y="1" z="-4"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
	<eqnStyle style="implicit"/>
</element>
<command name="Intersect">
	<input a0="l" a1="lVI"/>
	<output a0="I&apos;"/>
</command>
<element type="point" label="I&apos;">
	<show object="true" label="true" ev="4"/>
	<objColor r="255" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<coords x="5.333333333333334" y="13.333333333333332" z="8.666666666666668"/>
	<pointSize val="4"/>
	<pointStyle val="10"/>
</element>
<command name="If">
	<input a0="abs(e) ≠ Infinity" a1="Line[V, E]" a2="Line[V, xAxis]"/>
	<output a0="lVE"/>
</command>
<element type="line" label="lVE">
	<show object="true" label="false" ev="4"/>
	<objColor r="255" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<ggbscript onUpdate="SetValue(Parallels,1)&#xa;SetValue(Perpendiculars,1)"/>
	<coords x="4" y="4" z="-16"/>
	<lineStyle thickness="1" type="0" typeHidden="1"/>
	<eqnStyle style="implicit"/>
</element>
<command name="Intersect">
	<input a0="l" a1="lVE"/>
	<output a0="E&apos;"/>
</command>
<element type="point" label="E&apos;">
	<show object="true" label="true" ev="4"/>
	<objColor r="255" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<coords x="21.333333333333336" y="5.333333333333332" z="6.666666666666667"/>
	<pointSize val="4"/>
	<pointStyle val="10"/>
</element>
<command name="Angle">
	<input a0="N" a1="V" a2="P"/>
	<output a0="View"/>
</command>
<element type="angle" label="View">
	<angleStyle val="0"/>
	<value val="0.9272952180016122"/>
	<show object="true" label="false"/>
	<objColor r="0" g="0" b="255" alpha="0.57"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<lineStyle thickness="5" type="0" typeHidden="2" opacity="191"/>
	<arcSize val="30"/>
</element>
<element type="boolean" label="χHarmonic">
	<value val="false"/>
	<show object="true" label="true"/>
	<objColor r="255" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="4" y="17"/>
	<labelMode val="0"/>
	<checkbox fixed="true"/>
	<ggbscript onUpdate="If(χHarmonic, If(ManMoves(1)==&quot;N&quot;, SetCoords(N,nh,0), If(ManMoves(1)==&quot;P&quot;, SetCoords(P,ph,0), If(ManMoves(1)==&quot;E&quot;, SetCoords(E,eh,0), If(ManMoves(1)==&quot;I&quot;, SetCoords(I,dh,0), 0)))), 0)&#xa;RunUpdateScript(cr)"/>
</element>
<element type="button" label="butReset">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="43" y="1"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<auxiliary val="true"/>
	<ggbscript val="SetCoords(N, -2,0)&#xa;SetCoords(P, 2,0)&#xa;SetCoords(I, 1,0)&#xa;SetCoords(E, 4,0)&#xa;SetCoords(V, 0,4)&#xa;SetCoords(P&apos;, (2 x(P)+x(V))/3,(2 y(P)+y(V))/3)&#xa;SetCoords(N&apos;, (x(N)+x(V))/2,(y(N)+y(V))/2)"/>
	<caption val="Reset"/>
</element>
<expression label="txtMovables" exp="&quot;Movables: h(N, P, I, E), V, ℓ(N&apos;, P&apos;)&quot;"/>
<element type="text" label="txtMovables">
	<show object="true" label="false" ev="40"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<absoluteScreenLocation x="99" y="22"/>
</element>
<expression label="ω" exp="10^(10)"/>
<element type="numeric" label="ω">
	<value val="10000000000"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<animation speed="1" type="0" playing="false"/>
</element>
<element type="numeric" label="εsnap">
	<value val="0.1"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<slider min="-5" max="5" absoluteScreenLocation="true" width="200" fixed="false" horizontal="true" showAlgebra="false"/>
	<lineStyle thickness="2" type="0" typeHidden="1"/>
	<animation speed="1" type="0" playing="false"/>
</element>
<element type="numeric" label="ε">
	<value val="0.01"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<layer val="0"/>
	<labelMode val="1"/>
	<slider min="-5" max="5" absoluteScreenLocation="true" width="200" fixed="false" horizontal="true" showAlgebra="false"/>
	<lineStyle thickness="2" type="0" typeHidden="1"/>
	<animation speed="1" type="0" playing="false"/>
</element>
<command name="If">
	<input a0="n ≠ n ∨ abs(n) ≟ Infinity" a1="(2 * p) - e" a2="If[p ≠ p ∨ abs(p) ≟ Infinity, (2 * n) - e, If[e ≠ e ∨ abs(e) ≟ Infinity, (n + p) / 2, (((2 * n) * p) - ((n + p) * e)) / (n + p - (2 * e))]]"/>
	<output a0="dh"/>
</command>
<element type="numeric" label="dh">
	<value val="1"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="n ≠ n ∨ abs(n) ≟ Infinity" a1="(2 * p) - d" a2="If[p ≠ p ∨ abs(p) ≟ Infinity, (2 * n) - d, If[d ≠ d ∨ abs(d) ≟ Infinity, (n + p) / 2, (((2 * n) * p) - ((n + p) * d)) / (n + p - (2 * d))]]"/>
	<output a0="eh"/>
</command>
<element type="numeric" label="eh">
	<value val="4"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="e ≠ e ∨ abs(e) ≟ Infinity" a1="(2 * d) - p" a2="If[d ≠ d ∨ abs(d) ≟ Infinity, (2 * e) - p, If[p ≠ p ∨ abs(p) ≟ Infinity, (d + e) / 2, (((2 * d) * e) - ((d + e) * p)) / (e + d - (2 * p))]]"/>
	<output a0="nh"/>
</command>
<element type="numeric" label="nh">
	<value val="-2"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="e ≠ e ∨ abs(e) ≟ Infinity" a1="(2 * d) - n" a2="If[d ≠ d ∨ abs(d) ≟ Infinity, (2 * e) - n, If[n ≠ n ∨ abs(n) ≟ Infinity, (d + e) / 2, (((2 * d) * e) - ((d + e) * n)) / (d + e - (2 * n))]]"/>
	<output a0="ph"/>
</command>
<element type="numeric" label="ph">
	<value val="2"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="dr" exp="1 / (p - e) - 1 / (n - e)" />
<element type="numeric" label="dr">
	<value val="-0.33333333333333337"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="dl" exp="(e - p) / (e - n)" />
<element type="numeric" label="dl">
	<value val="0.3333333333333333"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="e ≠ e ∨ abs(e) ≟ Infinity" a1="(d - p) / (d - n)" a2="If[d ≠ d ∨ abs(d) ≟ Infinity, (e - n) / (e - p), If[p ≠ p ∨ abs(p) ≟ Infinity, (e - n) / (d - n), If[n ≠ n ∨ abs(n) ≟ Infinity, (d - p) / (e - p), (((e - n) * (d - p))) / (((d - n) * (e - p)))]]]"/>
	<output a0="cr"/>
</command>
<element type="numeric" label="cr">
	<value val="-1"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
	<ggbscript onUpdate="If(cr==-1, SetColor(χHarmonic,&quot;red&quot;), SetColor(χHarmonic,&quot;black&quot;))"/>
</element>
<expression label="vU&apos;" exp="Vector[N&apos;, P&apos;] / abs(Vector[N&apos;, P&apos;])" type="vector" />
<element type="vector" label="vU&apos;">
	<show object="false" label="false"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<coords x="0.961523947640823" y="-0.274721127897378" z="0"/>
	<lineStyle thickness="5" type="0" typeHidden="1" opacity="178"/>
	<coordStyle style="cartesian"/>
</element>
<command name="If">
	<input a0="x(N&apos;) ≟ x(N&apos;) ∧ x(E&apos;) ≟ x(E&apos;)" a1="(Vector[N&apos;, E&apos;] * vU&apos;)" a2="Infinity"/>
	<output a0="mN&apos;E&apos;"/>
</command>
<element type="numeric" label="mN&apos;E&apos;">
	<value val="4.36806593356831"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="x(N&apos;) ≟ x(N&apos;) ∧ x(I&apos;) ≟ x(I&apos;)" a1="(Vector[N&apos;, I&apos;] * vU&apos;)" a2="Infinity"/>
	<output a0="mN&apos;I&apos;"/>
</command>
<element type="numeric" label="mN&apos;I&apos;">
	<value val="1.680025359064735"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="x(P&apos;) ≟ x(P&apos;) ∧ x(E&apos;) ≟ x(E&apos;)" a1="(Vector[P&apos;, E&apos;] * vU&apos;)" a2="Infinity"/>
	<output a0="mP&apos;E&apos;"/>
</command>
<element type="numeric" label="mP&apos;E&apos;">
	<value val="1.9413626371414714"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="x(P&apos;) ≟ x(P&apos;) ∧ x(I&apos;) ≟ x(I&apos;)" a1="(Vector[P&apos;, I&apos;] * vU&apos;)" a2="Infinity"/>
	<output a0="mP&apos;I&apos;"/>
</command>
<element type="numeric" label="mP&apos;I&apos;">
	<value val="-0.7466779373621044"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<command name="If">
	<input a0="x(E&apos;) ≠ x(E&apos;) ∨ abs(x(E&apos;)) ≟ Infinity" a1="mP&apos;I&apos; / mN&apos;I&apos;" a2="If[x(I&apos;) ≠ x(I&apos;) ∨ abs(x(I&apos;)) ≟ Infinity, mN&apos;E&apos; / mP&apos;E&apos;, If[x(N&apos;) ≠ x(N&apos;) ∨ abs(x(N&apos;)) ≟ Infinity, mP&apos;I&apos; / mP&apos;E&apos;, If[x(P&apos;) ≠ x(P&apos;) ∨ abs(x(P&apos;)) ≟ Infinity, mN&apos;E&apos; / mN&apos;I&apos;, ((mN&apos;E&apos; * mP&apos;I&apos;)) / ((mN&apos;I&apos; * mP&apos;E&apos;))]]]"/>
	<output a0="cr&apos;"/>
</command>
<element type="numeric" label="cr&apos;">
	<value val="-1"/>
	<objColor r="0" g="0" b="0" alpha="0.10000000149011612"/>
</element>
<expression label="txtVars" exp="&quot;n = &quot; + n + &quot;, p = &quot; + p + &quot;; d=&quot; + d + &quot;, e=&quot; + e + &quot;&quot;" />
<element type="text" label="txtVars">
	<show object="false" label="false"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<absoluteScreenLocation x="350" y="22"/>
</element>
<expression label="txtCrossRatio" exp="&quot;(N,P;E,I)=\frac{NE\cdot PI}{NI\cdot PE}=&quot; + (LaTeX[cr]) + &quot;=\frac{&quot; + (LaTeX[e - n]) + &quot;\times&quot; + (LaTeX[d - p]) + &quot;}{&quot; + (LaTeX[d - n]) + &quot;\times&quot; + (LaTeX[e - p]) + &quot;}&quot;" />
<element type="text" label="txtCrossRatio">
	<show object="true" label="false"/>
	<objColor r="255" g="102" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="330" y="26"/>
</element>
<expression label="txtCrossRatio&apos;" exp="&quot;(N&apos;,P&apos;;E&apos;,I&apos;)=\frac{N&apos;E&apos;\cdot P&apos;I&apos;}{N&apos;I&apos;\cdot P&apos;E&apos;}=&quot; + (LaTeX[cr&apos;]) + &quot;=\frac{&quot; + (LaTeX[mN&apos;E&apos;]) + &quot;\times&quot; + (LaTeX[mP&apos;I&apos;]) + &quot;}{&quot; + (LaTeX[mN&apos;I&apos;]) + &quot;\times&quot; + (LaTeX[mP&apos;E&apos;]) + &quot;}&quot;" />
<element type="text" label="txtCrossRatio&apos;">
	<show object="true" label="false"/>
	<objColor r="0" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<fixed val="true"/>
	<isLaTeX val="true"/>
	<font serif="false" sizeM="1" size="0" style="0"/>
	<absoluteScreenLocation x="299" y="78"/>
</element>
<expression label="ManMoves" exp="{&quot;E&quot;, &quot;I&quot;, &quot;N&quot;, &quot;P&quot;}"/>
<element type="list" label="ManMoves">
	<show object="false" label="false" ev="4"/>
	<objColor r="0" g="100" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
</element>
<expression label="Parallels" exp="{&quot;Make Para∥el&quot;, &quot;ℓ ∥ VE&quot;, &quot;ℓ ∥ VI&quot;}"/>
<element type="list" label="Parallels">
	<show object="true" label="false" ev="4"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="160" y="40"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
	<ggbscript onUpdate="If(SelectedElement(Parallels)==&quot;ℓ ∥ VE&quot;, SetCoords(P&apos;,x(P&apos;p),y(P&apos;p)), If(SelectedElement(Parallels)==&quot;ℓ ∥ VI&quot;, SetCoords(N&apos;,x(N&apos;p),y(N&apos;p)), 0))"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<comboBox val="true"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
	<symbolic val="true" />
</element>
<expression label="Perpendiculars" exp="{&quot;Perpendicular&quot;, &quot;VI ⊥ VE&quot;}"/>
<element type="list" label="Perpendiculars">
	<show object="true" label="false" ev="4"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelOffset x="160" y="70"/>
	<labelMode val="0"/>
	<animation step="0.1" speed="1" type="0" playing="false"/>
	<ggbscript onUpdate="If(SelectedElement(Perpendiculars)==&quot;VI ⊥ VE&quot;, SetCoords(V,x(Vp),y(Vp)), 0)"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<comboBox val="true"/>
	<pointSize val="5"/>
	<pointStyle val="0"/>
	<angleStyle val="0"/>
	<symbolic val="true" />
</element>
<command name="Line">
	<input a0="N&apos;" a1="lVE"/>
	<output a0="lEParallel"/>
</command>
<element type="line" label="lEParallel">
	<show object="false" label="false" ev="4"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<coords x="4" y="4" z="-4"/>
	<lineStyle thickness="5" type="0" typeHidden="1" opacity="178"/>
	<eqnStyle style="implicit"/>
</element>
<command name="Line">
	<input a0="P&apos;" a1="lVI"/>
	<output a0="lIParallel"/>
</command>
<element type="line" label="lIParallel">
	<show object="false" label="false" ev="4"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<coords x="4" y="1" z="-6.666666666666667"/>
	<lineStyle thickness="5" type="0" typeHidden="1" opacity="178"/>
	<eqnStyle style="implicit"/>
</element>
<command name="OrthogonalLine">
	<input a0="I" a1="lVE"/>
	<output a0="lIPerpendicular"/>
</command>
<element type="line" label="lIPerpendicular">
	<show object="false" label="false" ev="4"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<selectionAllowed val="false"/>
	<coords x="-4" y="4" z="4"/>
	<lineStyle thickness="5" type="0" typeHidden="1" opacity="178"/>
	<eqnStyle style="implicit"/>
</element>
<command name="Intersect">
	<input a0="lEParallel" a1="lVP"/>
	<output a0="P&apos;p"/>
</command>
<element type="point" label="P&apos;p">
	<show object="false" label="true"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<coords x="24" y="-16" z="8"/>
	<pointSize val="4"/>
	<pointStyle val="0"/>
</element>
<command name="Intersect">
	<input a0="lIPerpendicular" a1="lVE"/>
	<output a0="Vp"/>
</command>
<element type="point" label="Vp">
	<show object="false" label="true"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<coords x="80" y="48" z="32"/>
	<pointSize val="4"/>
	<pointStyle val="0"/>
</element>
<command name="Intersect">
	<input a0="lIParallel" a1="lVN"/>
	<output a0="N&apos;p"/>
</command>
<element type="point" label="N&apos;p">
	<show object="false" label="true"/>
	<objColor r="68" g="68" b="68" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<coords x="5.333333333333334" y="58.66666666666667" z="12"/>
	<pointSize val="4"/>
	<pointStyle val="0"/>
</element>
<expression label="cE&apos;Center" exp="abs(N&apos; - E&apos;) ≟ abs(P&apos; - E&apos;)" />
<element type="boolean" label="cE&apos;Center">
	<value val="false"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<checkbox fixed="true"/>
</element>
<expression label="cE&apos;NearCenter" exp="abs(abs(N&apos; - E&apos;) - abs(P&apos; - E&apos;)) &lt; ε" />
<element type="boolean" label="cE&apos;NearCenter">
	<value val="false"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<checkbox fixed="true"/>
</element>
<expression label="cECenter" exp="abs(e - n) ≟ abs(e - p)" />
<element type="boolean" label="cECenter">
	<value val="false"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<checkbox fixed="true"/>
</element>
<expression label="cI&apos;Center" exp="abs(N&apos; - I&apos;) ≟ abs(P&apos; - I&apos;)" />
<element type="boolean" label="cI&apos;Center">
	<value val="false"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<checkbox fixed="true"/>
</element>
<expression label="cI&apos;NearCenter" exp="abs(abs(N&apos; - I&apos;) - abs(P&apos; - I&apos;)) &lt; ε" />
<element type="boolean" label="cI&apos;NearCenter">
	<value val="false"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<checkbox fixed="true"/>
</element>
<expression label="cICenter" exp="abs(d - n) ≟ abs(d - p)" />
<element type="boolean" label="cICenter">
	<value val="false"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<checkbox fixed="true"/>
</element>
<command name="Segment">
	<input a0="N&apos;" a1="E&apos;"/>
	<output a0="seN&apos;E&apos;"/>
</command>
<element type="segment" label="seN&apos;E&apos;">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cE&apos;Center"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="2"/>
	<coords x="1.2000000000000002" y="4.2" z="-7.2"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="N&apos;" a1="I&apos;"/>
	<output a0="seN&apos;I&apos;"/>
</command>
<element type="segment" label="seN&apos;I&apos;">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cI&apos;Center"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="2"/>
	<coords x="0.4615384615384619" y="1.6153846153846154" z="-2.769230769230769"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="N" a1="E"/>
	<output a0="seNE"/>
</command>
<element type="segment" label="seNE">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cECenter"/>
	<objColor r="255" g="127" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="2"/>
	<coords x="0" y="6" z="0"/>
	<lineStyle thickness="4" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="N" a1="I"/>
	<output a0="seNI"/>
</command>
<element type="segment" label="seNI">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cICenter"/>
	<objColor r="255" g="127" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="2"/>
	<coords x="0" y="3" z="0"/>
	<lineStyle thickness="4" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="P&apos;" a1="E&apos;"/>
	<output a0="seP&apos;E&apos;"/>
</command>
<element type="segment" label="seP&apos;E&apos;">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cE&apos;Center"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="2"/>
	<coords x="0.5333333333333334" y="1.8666666666666667" z="-3.2"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="P&apos;" a1="I&apos;"/>
	<output a0="seP&apos;I&apos;"/>
</command>
<element type="segment" label="seP&apos;I&apos;">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cI&apos;Center"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="2"/>
	<coords x="-0.20512820512820484" y="-0.7179487179487181" z="1.2307692307692306"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="P" a1="E"/>
	<output a0="sePE"/>
</command>
<element type="segment" label="sePE">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cECenter"/>
	<objColor r="255" g="127" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="2"/>
	<coords x="0" y="2" z="0"/>
	<lineStyle thickness="4" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="P" a1="I"/>
	<output a0="sePI"/>
</command>
<element type="segment" label="sePI">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cICenter"/>
	<objColor r="255" g="127" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="2"/>
	<coords x="0" y="-1" z="0"/>
	<lineStyle thickness="4" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="N&apos;" a1="E&apos;"/>
	<output a0="ssN&apos;E&apos;"/>
</command>
<element type="segment" label="ssN&apos;E&apos;">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cE&apos;NearCenter"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="1"/>
	<coords x="1.2000000000000002" y="4.2" z="-7.2"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="N&apos;" a1="I&apos;"/>
	<output a0="ssN&apos;I&apos;"/>
</command>
<element type="segment" label="ssN&apos;I&apos;">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cI&apos;NearCenter"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="1"/>
	<coords x="0.4615384615384619" y="1.6153846153846154" z="-2.769230769230769"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="P&apos;" a1="E&apos;"/>
	<output a0="ssP&apos;E&apos;"/>
</command>
<element type="segment" label="ssP&apos;E&apos;">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cE&apos;NearCenter"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="1"/>
	<coords x="0.5333333333333334" y="1.8666666666666667" z="-3.2"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Segment">
	<input a0="P&apos;" a1="I&apos;"/>
	<output a0="ssP&apos;I&apos;"/>
</command>
<element type="segment" label="ssP&apos;I&apos;">
	<show object="true" label="false" ev="4"/>
	<condition showObject="cI&apos;NearCenter"/>
	<objColor r="51" g="153" b="0" alpha="0"/>
	<layer val="0"/>
	<labelMode val="0"/>
	<decoration type="1"/>
	<coords x="-0.20512820512820484" y="-0.7179487179487181" z="1.2307692307692306"/>
	<lineStyle thickness="5" type="0" typeHidden="1"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
</construction>
</geogebra>